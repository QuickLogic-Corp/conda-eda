package:
  name: iverilog
  version: {{ GIT_DESCRIBE_TAG }}

source:
  git_url: https://github.com/steveicarus/iverilog.git
  git_rev: master
  patches:
    - fix-vvp-path.patch

build:
  # y==GIT_DESCRIBE_NUMBER, z==DATE_NUM, x==GIT_DESCRIBE_HASH
  #
  # number: 10693001803050325
  #         1yyyy00zzzzzzzzzz
  number: {{ '1%04i00%s'|format(GIT_DESCRIBE_NUMBER|int, os.environ.get('DATE_NUM')) }}
  # string: 0693.20180305_0325.g588ce0e3
  #         yyyy.zzzzzzzz_zzzz.gxxxxxxxx
  string: {{ '%04i'|format(GIT_DESCRIBE_NUMBER|int) }}.{{ os.environ.get('DATE_STR') }}.{{ GIT_DESCRIBE_HASH }}
  script_env:
    - CI
    - TRAVIS

requirements:
  build:
    - readline
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - gperf
  run:
  {% for package in resolved_packages('host') %}
    - {{ package }}
  {% endfor %}
  {% for package in resolved_packages('build') %}
    - {{ package }}
  {% endfor %}

test:
  files:
    - test/fsm.v
    - test/counter.v
    - test/counter_tb.v
    - test/counter_list.txt
    - test/hello_world.v

about:
  home: http://iverilog.icarus.com/
  license: GPLv2
  license_file: COPYING
  summary: 'Icarus Verilog (iverilog) is a Verilog simulation and synthesis tool. It operates as a compiler, compiling source code written in Verilog (IEEE-1364) into some target format. For batch simulation, the compiler can generate an intermediate form called vvp assembly. This intermediate form is executed by the ``vvp'' command. For synthesis, the compiler generates netlists in the desired format.'
